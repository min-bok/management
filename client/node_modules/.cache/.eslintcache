[{"/Users/entcrowd/hylee/과제/ReactProjectTutorial/management/client/src/index.js":"1","/Users/entcrowd/hylee/과제/ReactProjectTutorial/management/client/src/App.js":"2","/Users/entcrowd/hylee/과제/ReactProjectTutorial/management/client/src/reportWebVitals.js":"3","/Users/entcrowd/hylee/과제/ReactProjectTutorial/management/client/src/components/Customer.js":"4","/Users/entcrowd/hylee/과제/ReactProjectTutorial/management/client/src/components/CustomerAdd.js":"5","/Users/entcrowd/hylee/과제/ReactProjectTutorial/management/client/src/components/customerDelete.js":"6","/Users/entcrowd/hylee/과제/ReactProjectTutorial/management/client/src/components/CustomerDelete.js":"7","/Users/entcrowd/hylee/과제/ReactProjectTutorial/management/client/src/components/CustomerUpdate.js":"8"},{"size":535,"mtime":1659594126980,"results":"9","hashOfConfig":"10"},{"size":3459,"mtime":1660026235114,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1659594126981,"results":"12","hashOfConfig":"10"},{"size":831,"mtime":1660030812664,"results":"13","hashOfConfig":"10"},{"size":4616,"mtime":1660029934024,"results":"14","hashOfConfig":"10"},{"size":1803,"mtime":1660024450737,"results":"15","hashOfConfig":"10"},{"size":1776,"mtime":1660027776404,"results":"16","hashOfConfig":"10"},{"size":4957,"mtime":1660110799177,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"x9k4fv",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},"/Users/entcrowd/hylee/과제/ReactProjectTutorial/management/client/src/index.js",[],[],"/Users/entcrowd/hylee/과제/ReactProjectTutorial/management/client/src/App.js",["44"],[],"/Users/entcrowd/hylee/과제/ReactProjectTutorial/management/client/src/reportWebVitals.js",[],[],"/Users/entcrowd/hylee/과제/ReactProjectTutorial/management/client/src/components/Customer.js",[],[],"/Users/entcrowd/hylee/과제/ReactProjectTutorial/management/client/src/components/CustomerAdd.js",[],[],[],"/Users/entcrowd/hylee/과제/ReactProjectTutorial/management/client/src/components/customerDelete.js",["45"],[],"/Users/entcrowd/hylee/과제/ReactProjectTutorial/management/client/src/components/CustomerDelete.js",[],[],"/Users/entcrowd/hylee/과제/ReactProjectTutorial/management/client/src/components/CustomerUpdate.js",["46","47"],[],"import React from \"react\";\nimport axios, { post } from \"axios\";\nimport { Dialog } from \"@mui/material\";\nimport { DialogActions } from \"@mui/material\";\nimport { DialogTitle } from \"@mui/material\";\nimport { DialogContent } from \"@mui/material\";\nimport { TextField } from \"@mui/material\";\nimport { Button } from \"@mui/material\";\nimport { withStyles } from \"@mui/styles\";\n\nconst styles = (theme) => ({\n  hidden: {\n    display: \"none\",\n  },\n});\n\nclass CustomerUpdate extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      file: null,\n      userName: \"\",\n      birthday: \"\",\n      gender: \"\",\n      job: \"\",\n      fileName: \"\",\n      open: false,\n    };\n  }\n\n  handleFormSubmit = (e) => {\n    e.preventDefault();\n    this.updateCustomer(this.props.id).then((response) => {\n      // console.log(response.data);s\n      this.props.stateRefresh();\n    });\n    this.setState({\n      file: null,\n      userName: \"\",\n      birthday: \"\",\n      gender: \"\",\n      job: \"\",\n      fileName: \"\",\n      open: false,\n    });\n  };\n\n  handleFileChange = (e) => {\n    this.setState({\n      file: e.target.files[0],\n      fileName: e.target.value,\n    });\n  };\n\n  handleValueChange = (e) => {\n    let nextState = {};\n    nextState[e.target.name] = e.target.value;\n    this.setState(nextState);\n  };\n\n  updateCustomer = async (id) => {\n    const url = \"/api/customers/\" + id;\n    const { file, userName, birthday, gender, job, fileName } = this.state;\n\n    const val = {\n      file,\n      userName,\n      birthday,\n      gender,\n      job,\n      fileName,\n    };\n\n    // console.log(`userName ${val.userName}`);\n    // console.log(`gender ${val.gender}`);\n\n    const formData = new FormData();\n    formData.append(\"image\", this.state.file);\n    formData.append(\"name\", this.state.userName);\n    formData.append(\"birthday\", this.state.birthday);\n    formData.append(\"gender\", this.state.gender);\n    formData.append(\"job\", this.state.job);\n\n    await axios.put(url, formData, {\n      headers: {\n        \"content-type\": \"multipart/form-data\",\n      },\n    });\n    this.props.stateRefresh();\n  };\n\n  handleClickOpen = () => {\n    this.setState({\n      open: true,\n    });\n  };\n\n  handleClose = () => {\n    this.setState({\n      file: null,\n      userName: \"\",\n      birthday: \"\",\n      gender: \"\",\n      job: \"\",\n      fileName: \"\",\n      open: false,\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n        <Button\n          variant=\"outlined\"\n          color=\"secondary\"\n          onClick={this.handleClickOpen}\n        >\n          수정\n        </Button>\n        <Dialog open={this.state.open} onClose={this.handleClose}>\n          <DialogTitle>고객 정보 수정</DialogTitle>\n          <DialogContent>\n            <input\n              className={classes.hidden}\n              accept=\"image/*\"\n              id=\"raised-button-file\"\n              type=\"file\"\n              file={this.state.file}\n              value={this.state.fileName}\n              onChange={this.handleFileChange}\n            />\n            <br />\n            <label htmlFor=\"raised-button-file\">\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                component=\"span\"\n                name=\"file\"\n              >\n                {this.state.fileName === \"\"\n                  ? \"프로필 이미지 선택\"\n                  : this.state.fileName}\n              </Button>\n            </label>\n            <br />\n            <TextField\n              label=\"이름\"\n              type=\"text\"\n              name=\"userName\"\n              value={this.state.userName}\n              onChange={this.handleValueChange}\n            />\n            <br />\n            <TextField\n              label=\"생년월일\"\n              type=\"text\"\n              name=\"birthday\"\n              value={this.state.birthday}\n              onChange={this.handleValueChange}\n            />\n            <br />\n            <TextField\n              label=\"성별\"\n              type=\"text\"\n              name=\"gender\"\n              value={this.state.gender}\n              onChange={this.handleValueChange}\n            />\n            <br />\n            <TextField\n              label=\"직업\"\n              type=\"text\"\n              name=\"job\"\n              value={this.state.job}\n              onChange={this.handleValueChange}\n            />\n            <br />\n          </DialogContent>\n          <DialogActions>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={this.handleFormSubmit}\n            >\n              수정\n            </Button>\n            <Button\n              variant=\"outlined\"\n              color=\"secondary\"\n              onClick={this.handleClose}\n            >\n              닫기\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(CustomerUpdate);\n",{"ruleId":"48","severity":1,"message":"49","line":11,"column":10,"nodeType":"50","messageId":"51","endLine":11,"endColumn":26},{"ruleId":"48","severity":1,"message":"52","line":2,"column":8,"nodeType":"50","messageId":"51","endLine":2,"endColumn":13},{"ruleId":"48","severity":1,"message":"53","line":2,"column":17,"nodeType":"50","messageId":"51","endLine":2,"endColumn":21},{"ruleId":"48","severity":1,"message":"54","line":65,"column":11,"nodeType":"50","messageId":"51","endLine":65,"endColumn":14},"no-unused-vars","'CircularProgress' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'post' is defined but never used.","'val' is assigned a value but never used."]