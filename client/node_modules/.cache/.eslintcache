[{"/Users/entcrowd/과제/ReactProjectTutorial/management/client/src/index.js":"1","/Users/entcrowd/과제/ReactProjectTutorial/management/client/src/App.js":"2","/Users/entcrowd/과제/ReactProjectTutorial/management/client/src/reportWebVitals.js":"3","/Users/entcrowd/과제/ReactProjectTutorial/management/client/src/components/Customer.js":"4","/Users/entcrowd/과제/ReactProjectTutorial/management/client/src/components/CustomerAdd.js":"5","/Users/entcrowd/과제/ReactProjectTutorial/management/client/src/components/customerDelete.js":"6"},{"size":535,"mtime":1659594126980,"results":"7","hashOfConfig":"8"},{"size":3415,"mtime":1659865656534,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1659594126981,"results":"10","hashOfConfig":"8"},{"size":672,"mtime":1659862035148,"results":"11","hashOfConfig":"8"},{"size":7811,"mtime":1659926181791,"results":"12","hashOfConfig":"8"},{"size":1831,"mtime":1659925994252,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"1vvtcau",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/entcrowd/과제/ReactProjectTutorial/management/client/src/index.js",[],[],[],"/Users/entcrowd/과제/ReactProjectTutorial/management/client/src/App.js",["34"],[],"import \"./App.css\";\nimport Customer from \"./components/Customer\";\nimport { Paper } from \"@mui/material\";\nimport { Table } from \"@mui/material\";\nimport { TableHead } from \"@mui/material\";\nimport { TableBody } from \"@mui/material\";\nimport { TableRow } from \"@mui/material\";\nimport { TableCell } from \"@mui/material\";\nimport { withStyles } from \"@mui/styles\";\nimport { useEffect, useState } from \"react\";\nimport { CircularProgress } from \"@mui/material\";\nimport axios from \"axios\";\nimport CustomerAdd from \"./components/CustomerAdd\";\n\n// import { styled, alpha } from \"@mui/material/styles\";\n// import AppBar from \"@mui/material/AppBar\";\n// import Box from \"@mui/material/Box\";\n// import Toolbar from \"@mui/material/Toolbar\";\n// import IconButton from \"@mui/material/IconButton\";\n// import Typography from \"@mui/material/Typography\";\n// import InputBase from \"@mui/material/InputBase\";\n// import MenuIcon from \"@mui/icons-material/Menu\";\n// import SearchIcon from \"@mui/icons-material/Search\";\n\nconst styles = {\n  root: {\n    width: \"100%\",\n    overflowX: \"auto\",\n  },\n  table: {\n    minWidth: 1080,\n  },\n  process: {\n    margin: 20,\n  },\n};\n\nfunction App(props) {\n  const { classes } = props;\n  const [customers, setCustomers] = useState(\"\");\n  // const [comleted, setCompleted] = useState(0);\n\n  const stateRefresh = () => {\n    setCustomers(\"\");\n    // setCompleted(0);\n\n    axios\n      .get(\"/api/customers\")\n      .then((data) => setCustomers(data))\n      .catch((err) => console.log(err));\n  };\n\n  useEffect(() => {\n    axios\n      .get(\"/api/customers\")\n      .then((data) => setCustomers(data))\n      .catch((err) => console.log(err));\n  }, []);\n\n  // useEffect(() => {\n  //   setInterval(() => {\n  //     setCompleted(comleted >= 100 ? 0 : comleted + 25);\n  //   }, 20);\n  // }, [comleted]);\n\n  return (\n    <div>\n      <Paper className={classes.root}>\n        <Table className={classes.table}>\n          <TableHead>\n            <TableRow>\n              <TableCell>번호</TableCell>\n              <TableCell>이미지</TableCell>\n              <TableCell>이름</TableCell>\n              <TableCell>생년월일</TableCell>\n              <TableCell>성별</TableCell>\n              <TableCell>직업</TableCell>\n              <TableCell>설정</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {customers.data ? (\n              customers.data.map((customer) => {\n                return (\n                  <Customer\n                    stateRefresh={stateRefresh}\n                    key={customer.id}\n                    id={customer.id}\n                    image={customer.image}\n                    name={customer.name}\n                    birthday={customer.birthday}\n                    gender={customer.gender}\n                    job={customer.job}\n                  />\n                );\n              })\n            ) : (\n              <TableRow>\n                <TableCell colSpan={6} align=\"center\">\n                  {/* <CircularProgress\n                  className={classes.process}\n                  variant=\"determinate\"\n                  value={comleted}\n                /> */}\n                  <p>로딩중</p>\n                </TableCell>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </Paper>\n\n      <CustomerAdd stateRefresh={stateRefresh} />\n    </div>\n  );\n}\n\nexport default withStyles(styles)(App);\n","/Users/entcrowd/과제/ReactProjectTutorial/management/client/src/reportWebVitals.js",[],[],"/Users/entcrowd/과제/ReactProjectTutorial/management/client/src/components/Customer.js",[],[],"/Users/entcrowd/과제/ReactProjectTutorial/management/client/src/components/CustomerAdd.js",[],[],"/Users/entcrowd/과제/ReactProjectTutorial/management/client/src/components/customerDelete.js",["35"],[],{"ruleId":"36","severity":1,"message":"37","line":11,"column":10,"nodeType":"38","messageId":"39","endLine":11,"endColumn":26},{"ruleId":"36","severity":1,"message":"40","line":2,"column":8,"nodeType":"38","messageId":"39","endLine":2,"endColumn":13},"no-unused-vars","'CircularProgress' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used."]